"""init

Revision ID: 2382f0ba3091
Revises: 
Create Date: 2025-06-30 23:01:42.989281

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2382f0ba3091'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('support_tickets',
        sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
        sa.Column('subject', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('body', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('queue', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('priority', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('language', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('category', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('confidence_score', sa.NUMERIC(), autoincrement=False, nullable=True),
        sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('tag_1', sa.Text(), autoincrement=False, nullable=True),
        sa.Column('tag_2', sa.Text(), autoincrement=False, nullable=True),
        sa.Column('tag_3', sa.Text(), autoincrement=False, nullable=True),
        sa.Column('tag_4', sa.Text(), autoincrement=False, nullable=True),
        sa.Column('tag_5', sa.Text(), autoincrement=False, nullable=True),
        sa.Column('tag_6', sa.Text(), autoincrement=False, nullable=True),
        sa.Column('tag_7', sa.Text(), autoincrement=False, nullable=True),
        sa.Column('tag_8', sa.Text(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint('id', name='support_tickets_pkey'),
        postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_support_tickets_id'), 'support_tickets', ['id'], unique=False)
    op.create_table('ai_classification_results',
        sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
        sa.Column('support_ticket_id', sa.UUID(), autoincrement=False, nullable=True),
        sa.Column('category', sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column('confidence_score', sa.NUMERIC(), autoincrement=False, nullable=False),
        sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('priority', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('model_used', sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
        sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(['support_ticket_id'], ['support_tickets.id'], name=op.f('ai_classification_results_support_ticket_id_fkey')),
        sa.PrimaryKeyConstraint('id', name=op.f('ai_classification_results_pkey'))
    )
    op.create_index(op.f('ix_ai_classification_results_support_ticket_id'), 'ai_classification_results', ['support_ticket_id'], unique=False)
    op.create_index(op.f('ix_ai_classification_results_id'), 'ai_classification_results', ['id'], unique=False)
    # ### end Alembic commands ###

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ai_classification_results_id'), table_name='ai_classification_results')
    op.drop_index(op.f('ix_ai_classification_results_support_ticket_id'), table_name='ai_classification_results')
    op.drop_table('ai_classification_results')
    op.drop_index(op.f('ix_support_tickets_id'), table_name='support_tickets')
    op.drop_table('support_tickets')
    # ### end Alembic commands ###


    
